@model IssueTracker.Models.IssueModel

@{
    ViewBag.Title = "ViewIssue";
}

<h2>Issue - @Model.Name</h2>

<ul class="nav nav-tabs">
    <li class="nav-item active">
        <a href="#about" class="nav-link" data-toggle="tab">About</a>
    </li>
    @if (ViewBag.isCreator)
    {
        <li class="nav-item">
            <a href="#edit" class="nav-link" data-toggle="tab">Edit</a>
        </li>
    }
    <li class="nav-item">
        <a href="#comments" class="nav-link" data-toggle="tab">Comments</a>
    </li>
    <li class="nav-item">
        <a href="#activity" class="nav-link" data-toggle="tab">Activity</a>
    </li>
</ul>

<div class="tab-content">
    <div class="tab-pane fade" id="about">
        <div>
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.Name)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Name)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Description)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Description)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.DateTimeDeadline)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.DateTimeDeadline)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Priority)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Priority)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Status)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Status)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Type)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Type)
                </dd>
                @*                <dt>
                @Html.DisplayNameFor(model => model.IssueID)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.IssueID)
            </dd>*@

                @*                <dt>
                @Html.DisplayNameFor(model => model.AuthorID)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.AuthorID)
            </dd>*@

                <dt>
                    @Html.DisplayNameFor(model => model.AuthorName)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.AuthorName)
                </dd>

                @*                <dt>
                @Html.DisplayNameFor(model => model.AssigneeID)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.AssigneeID)
            </dd>*@

                <dt>
                    @Html.DisplayNameFor(model => model.AssigneeName)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.AssigneeName)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.DateTimeCreated)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.DateTimeCreated)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.DateTimeUpdated)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.DateTimeUpdated)
                </dd>

                @*                <dt>
                @Html.DisplayNameFor(model => model.ProjectID)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ProjectID)
            </dd>*@



            </dl>
            @if (ViewBag.isCreator)
            {
                using (Html.BeginForm("RemoveIssue", "Issue", FormMethod.Post, new { id = "removeIssueForm" }))
                {
                    @Html.AntiForgeryToken()

                    <a href="#" onclick="this.closest('form').submit();return false;">Remove issue</a>
                    <input name="IssueID" style="display:none" value="@Model.IssueID" />
                    <input name="ProjectID" style="display:none" value="@Model.ProjectID" />
                    <input name="Name" style="display:none" value="@Model.Name" />
                    <input name="cameFrom" style="display:none" value="@ViewBag.cameFrom" />
                }
            }
        </div>
    </div>
    @if (ViewBag.isCreator)
    {
        <div class="tab-pane fade" id="edit">
            <div id="editIssue"></div>
        </div>
    }
<div class="tab-pane fade" id="comments">
    @* I dont think passing empty model is necesary, if you remove the using_model in the view*@
    <div id="viewComments"></div>
    @Html.Partial("../Comment/CreateCommentForIssuePartialView", new IssueTracker.Models.CommentModel { })
</div>
    <div class="tab-pane fade" id="activity">
        <div id="viewActivity"></div>
    </div>
</div>

<p>
    @Html.ActionLink("Back to manage issues", "ManageIssues", "Issue", new {projectID = Model.ProjectID }, null)
</p>

@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")

<script>
        $(document).ready(function () {
            $("#about").addClass("active in");


        });

            var issueID = @Model.IssueID;
            $.ajax({
                url: '/Issue/EditIssuePartialView',
                data: {
                    issueID: issueID
                },
                contentType: 'application/html; charset=utf-8',
                type: 'GET',
                dataType: 'html',
                success: function (result) {
                    $('#editIssue').html(result);
                    $('#selectPriority option[value="@Model.Priority"]').prop("selected", true);
                    $('#selectStatus option[value="@Model.Status"]').prop("selected", true);
                    $('#selectType option[value="@Model.Type"]').prop("selected", true);
                },
                error: function () {
                    alert(status);
                }
            });

            $.ajax({
                url: '/Comment/ViewCommentsForIssuePartialView',
                data: {
                    issueID: issueID
                },
                contentType: 'application/html; charset=utf-8',
                type: 'GET',
                dataType: 'html',
                success: function (result) {
                    $('#viewComments').html(result);
                    $('#commentTable').DataTable({
                        "order": [[2, "desc"]],
                        columnDefs: [
                            { orderable: false, targets: 3 }
                        ]
                    });

                },
                error: function () {
                }
            });

            $.ajax({
                url: '/Activity/ViewActivityForIssuePartialView',
                data: {
                    issueID: issueID
                },
                contentType: 'application/html; charset=utf-8',
                type: 'GET',
                dataType: 'html',
                success: function (result) {
                    $('#viewActivity').html(result);
                    $('#activityTable').DataTable({
                        "order" : [[1, 'desc']],
                    });
                },
                error: function () {
                    alert(status);
                }
            });

        $.ajax({
            url: '/Issue/AllEmailAndIDInProject',
            data: {
                projectID: @Model.ProjectID
            },
            contentType: 'application/html; charset=utf-8',
            type: 'GET',
            dataType: 'html',
            success: function (result) {
                $('#selectAssignee').html(result);
                $('#selectAssignee').append('<option value=""></option>');
                $('#selectAssignee option[value="@Model.AssigneeID"]').prop("selected", true);
                


            },
            error: function () {
                alert(status);
            }
        });

</script>

    @*Edit issue stuff*@
<script>
        $(document).ready(function () {

            


        });
</script>

}