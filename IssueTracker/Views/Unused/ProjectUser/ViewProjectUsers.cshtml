@model IEnumerable<IssueTracker.Models.ProjectUserModel>

@{
    ViewBag.Title = "ViewProjectUsers";
}

<h2>ViewProjectUsers</h2>

<input id="btnAjax" name="btnAjax" type="button" value="GetProducts" />
<div id="products"></div>

@*@Ajax.ActionLink("Load users", "ViewProjectUsers"){
    }*@

@Html.ActionLink("Add user", "AddProjectUser", "ProjectUser", new { ViewBag.projectID }, null);

@section Scripts {

    <script>

        // using jquery and ajax create a GET call when button pressed
        // pass in correct url and if required data for parameters
        // append result to #products div
        $('#btnAjax').click(function () {
            var projectID = @ViewBag.projectID;
            $.ajax({
                url: '/ProjectUser/ViewUsers',
                data: {
                    projectID: projectID
                },
                contentType: 'application/html; charset=utf-8',
                type: 'GET',
                dataType: 'html',
                success: function (result) {
                    $('#products').html(result);
                },
                error: function () {
                    alert(status);
                }
            });
        });



    </script>
}
























@*<p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProjectID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Role)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserEmail)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserName)
            </th>
            <th></th>
        </tr>

    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProjectID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Role)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserEmail)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserName)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
            </td>
        </tr>
    }

    </table>*@
